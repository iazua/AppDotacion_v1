@model IEnumerable<AppDotacion.Models.Dotacion>

@{
    ViewData["Title"] = "Dotaciones";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-4 text-primary">@ViewData["Title"]</h1>
        </div>
        <div class="col-md-4 text-end">
            <a asp-action="Create" class="btn btn-success">
                <i class="fas fa-plus-circle"></i> Nueva Dotación
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow mb-4">
        <div class="card-header py-3 bg-primary text-white">
            <h6 class="m-0 font-weight-bold">Filtros de Búsqueda</h6>
        </div>
        <div class="card-body">
            <form method="get" class="mb-4">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="input-group">
                            <input type="text" name="searchTerm" class="form-control" placeholder="Buscar en todos los campos..."
                                   value="@ViewContext.HttpContext.Request.Query["searchTerm"].FirstOrDefault()" />
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search"></i> Buscar
                            </button>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <select name="columnFilter" class="form-select">
                            <option value="">Seleccione una columna...</option>
                            @foreach (var column in ViewData["ColumnNames"] as List<string> ?? new List<string>())
                            {
                                var isSelected = ViewContext.HttpContext.Request.Query["columnFilter"].FirstOrDefault() == column;
                                <option value="@column" selected="@isSelected">@column</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-6">
                        <div class="input-group">
                            <input type="text" name="filterValue" class="form-control" placeholder="Valor a filtrar..."
                                   value="@ViewContext.HttpContext.Request.Query["filterValue"].FirstOrDefault()" />
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-filter"></i> Filtrar
                            </button>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <a asp-action="Index" class="btn btn-outline-secondary w-100">
                            <i class="fas fa-sync-alt"></i> Limpiar
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="dataTable" width="100%" cellspacing="0">
                    <thead class="table-dark">
                        <tr>
                            <th>Acciones</th>
                            <th>@Html.DisplayNameFor(model => model.First().Rut_DNI)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Agente)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Pais_Call_Center)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Area)</th>
                            <th>@Html.DisplayNameFor(model => model.First().AreaGestion)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Contrato)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Servicio)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-primary" title="Editar">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                </td>
                                <td>@item.Rut_DNI</td>
                                <td>@item.Agente</td>
                                <td>@item.Pais_Call_Center</td>
                                <td>@item.Area</td>
                                <td>@item.AreaGestion</td>
                                <td>@item.Contrato</td>
                                <td>@item.Servicio</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Inicializar DataTable
            $('#dataTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                },
                responsive: true,
                dom: '<"top"lf>rt<"bottom"ip>',
                pageLength: 10
            });

            // Ocultar alerta después de 5 segundos
            setTimeout(function () {
                $('.alert').fadeOut('slow');
            }, 5000);
        });
    </script>
}